"0","knitr::opts_chunk$set(echo = TRUE)"
"0",""
"0","# Load packages - I like to use the pacman package to do this more elegantly."
"0","if (!require(""pacman"")) install.packages(""pacman""); library(pacman)"
"2","Loading required package: pacman
"
"0","# The pacman package has a nice function 'p_load()' that will load the listed packages and install them if they are not already installed."
"0","p_load(DBI,RODBC,odbc,dbplyr,RMySQL,tidyverse,keyring,con2aqi,lubridate, stringr)"
"0",""
"0","# Check that MySQL is listed, if it isn't need to provide steps."
"0","sort(unique(odbcListDrivers()[[1]]))"
"1","[1]"
"1"," ""Microsoft Access Driver (*.mdb, *.accdb)""              "
"1","
"
"1","[2]"
"1"," ""Microsoft Access Text Driver (*.txt, *.csv)""           "
"1","
"
"1","[3]"
"1"," ""Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)"""
"1","
"
"1","[4]"
"1"," ""MySQL ODBC 8.1 ANSI Driver""                            "
"1","
"
"1","[5]"
"1"," ""MySQL ODBC 8.1 Unicode Driver""                         "
"1","
"
"1","[6]"
"1"," ""SQL Server""                                            "
"1","
"
"0","sql_conn <- dbConnect(RMySQL::MySQL(),"
"0","                  dbname = ""aaar2023tutorial"","
"0","                  Server = ""localhost"","
"0","                  port = 3306,"
"0","                  user = ""root"","
"0","                  password = key_get(""MYSQL_PASSWORD"")"
"0","                  )"
"0","initial_run=0"
"0",""
"0","if(initial_run==1){"
"0","  ## FIRST TIME ONLY!"
"0","# load some data"
"0","metadata <- read_csv(""data/example 1/metadata.csv"")"
"0","NO2_daily <- read_csv(""data/example 1/NO2_daily.csv"", col_types = cols(date = col_character())) %>% mutate(date=mdy(date), date=format(date,""%Y-%m-%d""))"
"0",""
"0","O3_daily <- read_csv(""data/example 1/O3_daily.csv"", col_types = cols(date = col_date(format = ""%m/%d/%Y"")))"
"0","PM_daily <- read_csv(""data/example 1/PM_daily.csv"", col_types = cols(date = col_date(format = ""%m/%d/%Y"")))"
"0",""
"0","# So that we can permit writing to SQL from R!"
"0","dbSendQuery(sql_conn, ""SET GLOBAL local_infile = true;"")"
"0",""
"0","# create a table in your SQL database"
"0","dbCreateTable(sql_conn,name=""no2_daily"", fields=NO2_daily)"
"0","dbCreateTable(sql_conn,name=""o3_daily"", fields=O3_daily)"
"0","dbCreateTable(sql_conn,name=""pm_daily"", fields=PM_daily)"
"0",""
"0","# write our data to the SQL database"
"0","dbWriteTable(sql_conn,""no2_daily"",NO2_daily,append=TRUE, row.names=FALSE)"
"0","dbWriteTable(sql_conn,""o3_daily"",O3_daily,append=TRUE, row.names=FALSE)"
"0","dbWriteTable(sql_conn,""pm_daily"",PM_daily,append=TRUE, row.names=FALSE)"
"0",""
"0","dbSendQuery(sql_conn,""ALTER TABLE no2_daily MODIFY date datetime;"")"
"0","dbSendQuery(sql_conn,""ALTER TABLE o3_daily MODIFY date datetime;"")"
"0","dbSendQuery(sql_conn,""ALTER TABLE pm_daily MODIFY date datetime;"")"
"0","}"
"0",""
"0",""
"0",""
"0",""
"0","# let's query our SQL in R! Let's say we are interested in calculating the AQI for the week of May 15 - 21, 2022 at the Mahon Park site (MP)"
"0","no2_db = tbl(sql_conn,""no2_daily"") %>% select(date,MP) %>% filter(between(date, as.Date('2022-05-15'), as.Date('2022-05-21'))) %>% show_query() %>% collect() %>% rename(NO2_MP = MP)"
"1","<SQL>
"
"1","[34mSELECT[39m `date`, `MP`
[34mFROM[39m `no2_daily`
[34mWHERE[39m (`date` BETWEEN CAST('2022-05-15' AS DATE) AND CAST('2022-05-21' AS DATE))
"
"0","o3_db = tbl(sql_conn,""o3_daily"") %>% select(date,MP) %>% filter(between(date, as.Date('2022-05-15'), as.Date('2022-05-21'))) %>% show_query() %>% collect() %>% rename(O3_MP = MP)"
"1","<SQL>
"
"1","[34mSELECT[39m `date`, `MP`
[34mFROM[39m `o3_daily`
[34mWHERE[39m (`date` BETWEEN CAST('2022-05-15' AS DATE) AND CAST('2022-05-21' AS DATE))
"
"0","pm_db = tbl(sql_conn,""pm_daily"") %>% select(date,MP) %>% filter(between(date, as.Date('2022-05-15'), as.Date('2022-05-21'))) %>% show_query() %>% collect() %>% rename(PM_MP = MP)"
"1","<SQL>
"
"1","[34mSELECT[39m `date`, `MP`
[34mFROM[39m `pm_daily`
[34mWHERE[39m (`date` BETWEEN CAST('2022-05-15' AS DATE) AND CAST('2022-05-21' AS DATE))
"
"0","#let's put it together into one dataframe for our local analysis"
"0","aqi <- left_join(no2_db, o3_db, by='date') %>% left_join(., pm_db, by='date') %>% rowwise() %>%"
"0","  mutate(aqi = max(con2aqi(""pm25"",PM_MP),con2aqi(""o3"",O3_MP/1000,""8h""),con2aqi(""no2"",NO2_MP)))"
"0",""
"0","# maybe now we want to make a box plot of the no2 concentrations across sites!"
"0","no2_tidy = tbl(sql_conn,""no2_daily"") %>% select(-date) %>% show_query() %>% collect() %>% pivot_longer(everything(),names_to = ""site"", values_to = ""concentration"")"
"1","<SQL>
"
"1","[34mSELECT[39m
  `R1001`,
  `R1002`,
  `R1004`,
  `R1005`,
  `R1008`,
  `R1009`,
  `R1011`,
  `R1012`,
  `R1039`,
  `R1040`,
  `R1041`,
  `BS`,
  `BK`,
  `RS`,
  `MP`
[34mFROM[39m `no2_daily`
"
"0","# Create a custom order for the 'site' variable"
"0","site_order <- c(""BS"", ""BK"", ""MP"",""RS"",""R1001"",""R1002"",""R1004"",""R1005"",""R1008"",""R1009"",""R1011"",""R1012"",""R1039"",""R1040"",""R1041"")"
"0",""
"0","# Make box plots for everything"
"0","no2_plot <- ggplot(no2_tidy, aes(x = factor(site, levels = site_order), y = concentration, fill=site)) +"
"0","  geom_boxplot() +"
"0","  labs(title = ""NO2 Concentrations by Site"","
"0","       x = ""Site"","
"0","       y = ""Concentration (ppb)"") +"
"0","  theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position=""none"") +"
"0","  scale_fill_discrete() +"
"0","  coord_cartesian(ylim = c(0,60))"
"0","no2_plot"
